version: '3.5'

networks:
  laravel:


services:
  web:
    build:
      context: .
      dockerfile: nginx.dockerfile
    container_name: ${PROJECT_NAME}-nginx
    environment:
      - APP_HOST=${PROJECT_NAME}-app
      - USER_ID=${USER_ID}
      - GROUP_ID=${GROUP_ID}
    ports:
      - 8000:80
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - app
      # - redis
      # - mysql
    networks:
      - laravel

  # postgres:
  #   image: postgres:9.5-alpine
  #   container_name: ${PROJECT_NAME}-postgres
  #   restart: unless-stopped    
  #   environment:
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #     - POSTGRES_DB=${POSTGRES_DB}
  #   # In case you need to persist the data
  #   # volumes:
  #   #   - ./postgresql:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - laravel

  # mysql:
  #   image: mysql:5.7.29
  #   container_name: mysql
  #   restart: unless-stopped
  #   tty: true
  #   ports:
  #     - 3306:3306
  #   environment:
  #     MYSQL_DATABASE: homestead
  #     MYSQL_USER: homestead
  #     MYSQL_PASSWORD: secret
  #     MYSQL_ROOT_PASSWORD: secret
  #     SERVICE_TAGS: dev
  #     SERVICE_NAME: mysql
      # In case you need to persist the data
  #   volumes:
  #     - ./mysql:/var/lib/mysql
  #   networks:
  #     - laravel

  app:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: ${PROJECT_NAME}-app
    environment:
      - USER_ID=${USER_ID}
      - GROUP_ID=${GROUP_ID}
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - laravel

  # redis:
  #   image: redis:alpine
  #   container_name: redis
  #   restart: unless-stopped
  #   ports:
  #     - 6379:6379
  #   networks:
  #     - laravel

  composer:
    build:
      context: .
      dockerfile: composer.dockerfile
    container_name: ${PROJECT_NAME}-composer
    environment:
      - USER_ID=${USER_ID}
      - GROUP_ID=${GROUP_ID}
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - app
    user: laravel
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - laravel

  # npm:
  #   image: node:13.7
  #   container_name: ${PROJECT_NAME}-npm
  #   volumes:
  #     - ./src:/var/www/html
  #   working_dir: /var/www/html
  #   entrypoint: ['npm']
  #   networks:
  #     - laravel

  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: ${PROJECT_NAME}-artisan
    environment:
      - USER_ID=${USER_ID}
      - GROUP_ID=${GROUP_ID}
    volumes:
      - ./src:/var/www/html:delegated
    # depends_on:
    #   - mysql
    #   - postgres
    working_dir: /var/www/html
    user: laravel
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel
